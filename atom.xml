<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>过愙</title>
  
  <subtitle>编程有风险，入坑需谨慎</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zengwu.com.cn/"/>
  <updated>2022-04-13T05:59:44.103Z</updated>
  <id>https://zengwu.com.cn/</id>
  
  <author>
    <name>过客</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Win10开机默认开启数字小键盘</title>
    <link href="https://zengwu.com.cn/p/b378ee31.html"/>
    <id>https://zengwu.com.cn/p/b378ee31.html</id>
    <published>2022-04-12T16:46:55.000Z</published>
    <updated>2022-04-13T05:59:44.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="打开注册表"><a href="#打开注册表" class="headerlink" title="打开注册表"></a>打开注册表</h2><p>按<code>Windows + R</code>打开运行窗口，输入<code>regedit</code>打开注册表编辑器</p><h2 id="找到注册表"><a href="#找到注册表" class="headerlink" title="找到注册表"></a>找到注册表</h2><p>找到<code>计算机\HKEY_USERS\.DEFAULT\Control Panel\Keyboard</code>项中的<code>InitialKeyboardIndicators</code>值</p><p><img src="//gitee.com/guoke3915/zw/raw/master/p/b378ee31/19826068-73d08a1688123c6e.png" alt></p><h2 id="修改值"><a href="#修改值" class="headerlink" title="修改值"></a>修改值</h2><p>将<code>InitialKeyboardIndicators</code>值由<code>2147483648</code>，修改为<code>2</code></p><p><img src="//gitee.com/guoke3915/zw/raw/master/p/b378ee31/19826068-e41a3886ec04f805.png" alt></p><p>InitialKeyboardIndicators值说明：</p><ul><li>0：在登录后关闭数字锁定</li><li>1：禁用数字锁定</li><li>2：在登录后开启数字锁定。（登录页面时还是关闭的）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;打开注册表&quot;&gt;&lt;a href=&quot;#打开注册表&quot; class=&quot;headerlink&quot; title=&quot;打开注册表&quot;&gt;&lt;/a&gt;打开注册表&lt;/h2&gt;&lt;p&gt;按&lt;code&gt;Windows + R&lt;/code&gt;打开运行窗口，输入&lt;code&gt;regedit&lt;/code&gt;打开注册
      
    
    </summary>
    
    
      <category term="Windows" scheme="https://zengwu.com.cn/categories/Windows/"/>
    
    
      <category term="Window" scheme="https://zengwu.com.cn/tags/Window/"/>
    
  </entry>
  
  <entry>
    <title>iOS 提交审核报错 ERROR ITMS-90087</title>
    <link href="https://zengwu.com.cn/p/1af38a39.html"/>
    <id>https://zengwu.com.cn/p/1af38a39.html</id>
    <published>2022-04-11T05:37:02.000Z</published>
    <updated>2022-04-12T12:28:37.291Z</updated>
    
    <content type="html"><![CDATA[<p>项目中加了Adjust  SDK，在打包提交审核的时候直接报错了。</p><pre><code>ERROR ITMS-90087: &quot;Unsupported Architectures. The executable for yimiaozhaopin.app/Frameworks/AdjustSdk.framework contains unsupported architectures &#39;[x86_64, i386]&#39;.&quot;</code></pre><p>这是下载的``包中包含了x86_64, i386 架构，所以提交时会报错ERROR ITMS-90087。用script命令去掉framework 中的x86_64, i386 架构就可以了。</p><p>先找到项目工程属性的<code>Build Phases</code>属性页，添加<code>Script Phase</code>，将下面脚本直接粘贴到脚本框中就可以了。</p><p><img src="//gitee.com/guoke3915/zw/raw/master/p/1af38a39/19826068-4d0c0d18a81027ba.png" alt></p><pre><code>APP_PATH=&quot;${TARGET_BUILD_DIR}/${WRAPPER_NAME}&quot;# This script loops through the frameworks embedded in the application and# removes unused architectures.find &quot;$APP_PATH&quot; -name &#39;*.framework&#39; -type d | while read -r FRAMEWORKdoFRAMEWORK_EXECUTABLE_NAME=$(defaults read &quot;$FRAMEWORK/Info.plist&quot; CFBundleExecutable)FRAMEWORK_EXECUTABLE_PATH=&quot;$FRAMEWORK/$FRAMEWORK_EXECUTABLE_NAME&quot;echo &quot;Executable is $FRAMEWORK_EXECUTABLE_PATH&quot;EXTRACTED_ARCHS=()for ARCH in $ARCHSdoecho &quot;Extracting $ARCH from $FRAMEWORK_EXECUTABLE_NAME&quot;lipo -extract &quot;$ARCH&quot; &quot;$FRAMEWORK_EXECUTABLE_PATH&quot; -o &quot;$FRAMEWORK_EXECUTABLE_PATH-$ARCH&quot;EXTRACTED_ARCHS+=(&quot;$FRAMEWORK_EXECUTABLE_PATH-$ARCH&quot;)doneecho &quot;Merging extracted architectures: ${ARCHS}&quot;lipo -o &quot;$FRAMEWORK_EXECUTABLE_PATH-merged&quot; -create &quot;${EXTRACTED_ARCHS[@]}&quot;rm &quot;${EXTRACTED_ARCHS[@]}&quot;echo &quot;Replacing original executable with thinned version&quot;rm &quot;$FRAMEWORK_EXECUTABLE_PATH&quot;mv &quot;$FRAMEWORK_EXECUTABLE_PATH-merged&quot; &quot;$FRAMEWORK_EXECUTABLE_PATH&quot;done</code></pre><p>本文参考：<a href="https://www.jianshu.com/p/c381a07cb758" target="_blank" rel="noopener">https://www.jianshu.com/p/c381a07cb758</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目中加了Adjust  SDK，在打包提交审核的时候直接报错了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ERROR ITMS-90087: &amp;quot;Unsupported Architectures. The executable for yimiaozhaopin.app/
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://zengwu.com.cn/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://zengwu.com.cn/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>mac安装braw</title>
    <link href="https://zengwu.com.cn/p/2fafa45b.html"/>
    <id>https://zengwu.com.cn/p/2fafa45b.html</id>
    <published>2022-04-05T03:05:30.000Z</published>
    <updated>2022-04-12T12:28:37.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令行安装"><a href="#命令行安装" class="headerlink" title="命令行安装"></a>命令行安装</h2><p>对于braw的安装，只要一条命令就可以了</p><pre><code class="line-numbers language-bash">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;</code></pre><h2 id="安装慢或443问题"><a href="#安装慢或443问题" class="headerlink" title="安装慢或443问题"></a>安装慢或443问题</h2><p>由于安装源在github上，国内访问github有名种蛋疼的问题。</p><p>通过<code>https://www.ipaddress.com</code>先查出<code>raw.githubusercontent.com</code>的真实ip，然后修改本地hosts文件添加直接解析</p><pre><code class="line-numbers language-bash">:: 由于它是通过CDN的，可能不止一个ip，挑一个自己访问最快的ip解析就可以了，ip之后也可能会改变。185.199.108.133 raw.githubusercontent.com185.199.108.133 user-images.githubusercontent.com185.199.108.133 avatars2.githubusercontent.com185.199.108.133 avatars1.githubusercontent.com</code></pre><p>然后再运行上面的命令安装brew。</p><p>自己安装了好几次都卡在了<code>homebrew-core</code>下载上，有时是下不过来，有时直接报错了。</p><pre><code>Cloning into &#39;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core&#39;...fatal: unable to access &#39;https://github.com/Homebrew/homebrew-core/&#39;: LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54Error: Failure while executing; `git clone https://github.com/Homebrew/homebrew-core /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core` exited with 128.Error: Failure while executing; `/usr/local/bin/brew tap homebrew/core` exited with 1.</code></pre><p>这个，直接进入github网站<a href="https://github.com/Homebrew/homebrew-core" target="_blank" rel="noopener">https://github.com/Homebrew/homebrew-core</a>，点击直接下载zip包。</p><p><img src="//gitee.com/guoke3915/zw/raw/master/p/2fafa45b/19826068-905821c16135df24.png" alt></p><p>然后把整个zip包解压，复制到<code>/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core</code>目录下。</p><p>最后诊断一下</p><pre><code>brew doctorbrew -v</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;命令行安装&quot;&gt;&lt;a href=&quot;#命令行安装&quot; class=&quot;headerlink&quot; title=&quot;命令行安装&quot;&gt;&lt;/a&gt;命令行安装&lt;/h2&gt;&lt;p&gt;对于braw的安装，只要一条命令就可以了&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;line-numbers la
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://zengwu.com.cn/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://zengwu.com.cn/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>mac 10.9.5系统升级</title>
    <link href="https://zengwu.com.cn/p/b31124f3.html"/>
    <id>https://zengwu.com.cn/p/b31124f3.html</id>
    <published>2022-04-04T04:33:53.000Z</published>
    <updated>2022-04-12T12:28:37.286Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-先检查兼容性"><a href="#1-先检查兼容性" class="headerlink" title="1. 先检查兼容性"></a>1. 先检查兼容性</h2><p>进入苹果官方网<a href="http://support.apple.com/zh-cn/HT211683" target="_blank" rel="noopener">http://support.apple.com/zh-cn/HT211683</a>，找到兼容性检查，查看对应的系统最低硬件要求<br><img src="//gitee.com/guoke3915/zw/raw/master/p/b31124f3/19826068-d7ff40539bd4835f.png" alt></p><h2 id="2-备份数据"><a href="#2-备份数据" class="headerlink" title="2. 备份数据"></a>2. 备份数据</h2><p>正常情况下来，系统更新后会保持原数据不变，但不排除出错数据丢失的情况，所要，重要的数据先到移动硬盘或网盘备份一下。</p><h2 id="3-下载系统安装包"><a href="#3-下载系统安装包" class="headerlink" title="3. 下载系统安装包"></a>3. 下载系统安装包</h2><p>找到对应的系统后，在 Mac 上使用 Safari 浏览器点击对应的macOS，会自动跳转到Appstore中对应的系统安装包下载。只要下安装就可以了</p><p><img src="//gitee.com/guoke3915/zw/raw/master/p/b31124f3/19826068-cb6c537f8e9f2c40.png" alt></p><h2 id="4-等待安装完成"><a href="#4-等待安装完成" class="headerlink" title="4. 等待安装完成"></a>4. 等待安装完成</h2><p>中间可能会重启几次，等待安装完成，系统就更新成功啦</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-先检查兼容性&quot;&gt;&lt;a href=&quot;#1-先检查兼容性&quot; class=&quot;headerlink&quot; title=&quot;1. 先检查兼容性&quot;&gt;&lt;/a&gt;1. 先检查兼容性&lt;/h2&gt;&lt;p&gt;进入苹果官方网&lt;a href=&quot;http://support.apple.com/zh-
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://zengwu.com.cn/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://zengwu.com.cn/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>mac os无法登录appstore</title>
    <link href="https://zengwu.com.cn/p/2dd7582f.html"/>
    <id>https://zengwu.com.cn/p/2dd7582f.html</id>
    <published>2022-04-03T08:40:59.000Z</published>
    <updated>2022-04-12T12:28:37.288Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在一台老的macbook air（10.9.5系统）上，发现 appstore无法登录，每次输入正确的密码手机也能收到二次验证，但是直接提示密码错误，并没有让你输入二次验证码的地方。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>第一次正常输入账号密码点登录，这时会返回密码错误，但手机会同时收到二次验证吗。</li><li>把验证码添加到apple ID的密码后面，再次点登录，就可以成功登录了。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;在一台老的macbook air（10.9.5系统）上，发现 appstore无法登录，每次输入正确的密码手机也能收到二次验证，但是直接提示
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://zengwu.com.cn/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://zengwu.com.cn/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>svn命令行使用</title>
    <link href="https://zengwu.com.cn/p/475253dd.html"/>
    <id>https://zengwu.com.cn/p/475253dd.html</id>
    <published>2022-03-31T06:53:47.000Z</published>
    <updated>2022-04-12T12:28:37.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、检出-（svn-co）"><a href="#1、检出-（svn-co）" class="headerlink" title="1、检出 （svn co）"></a>1、检出 （svn co）</h2><p>命令：<code>svn co url path</code></p><ul><li>url：服务器svn项目地址</li><li>path：本地存放目录，如果不写path，默认会在当前目录创建</li></ul><p>例如：</p><pre><code>svn co svn://192.168.31.55/svn/test test</code></pre><h2 id="2、更新（svn-up）"><a href="#2、更新（svn-up）" class="headerlink" title="2、更新（svn up）"></a>2、更新（svn up）</h2><p>命令：<code>svn up -r m path</code></p><ul><li>m：指定的版本号，如果没有则更新到最新版本</li><li>path：指定更新的目录或文件，如果没有则更新当前目录</li></ul><p>例如：</p><pre><code># 更新当前目录，若当前目录为svn项目根目录则更新所有svn up # 更新指定文件到指定版本svn update -r 55 test.txt</code></pre><h2 id="3、查看文件或者目录状态（svn-st）"><a href="#3、查看文件或者目录状态（svn-st）" class="headerlink" title="3、查看文件或者目录状态（svn st）"></a>3、查看文件或者目录状态（svn st）</h2><p>命令：svn st -v path</p><ul><li>?：不在svn的控制中</li><li>M：内容被修改</li><li>C：发生冲突</li><li>A：预定加入到版本库</li><li>K：被锁定</li><li>-v：显示目录下的文件和子目录的状态，无-v则正常状态不显示</li></ul><p>例如：</p><pre><code>svn stsvn st -v</code></pre><h2 id="4、添加文件（svn-add）"><a href="#4、添加文件（svn-add）" class="headerlink" title="4、添加文件（svn add）"></a>4、添加文件（svn add）</h2><p>命令：<code>svn add file</code></p><ul><li>file：需要添加的文件，可以使用*通配符匹配多个。</li></ul><p>例如：</p><pre><code># 添加单个文件svn add a.txt# 添加同类型文件svn add *.txt# 添加所有版本控制外的新文件svn st | awk &#39;{if ( $1 == &quot;?&quot;) { print $2}}&#39; | xargs svn add</code></pre><h2 id="5、删除文件（svn-del）"><a href="#5、删除文件（svn-del）" class="headerlink" title="5、删除文件（svn del）"></a>5、删除文件（svn del）</h2><p>命令：<code>svn del path -m &quot;msg&quot;</code></p><ul><li>path：要删除的文件和目录</li><li>-m： 删除备注说明，可缺省</li></ul><p>例如：</p><pre><code># 删除当个文件svn del test.txt# 删除本地不存在的所有文件svn st | grep &#39;^\!&#39; | tr &#39;^\!&#39; &#39; &#39; | sed &#39;s/[ ]*//&#39; | sed &#39;s/[ ]/\\ /g&#39; | xargs svn del</code></pre><h2 id="6、提交（svn-ci）"><a href="#6、提交（svn-ci）" class="headerlink" title="6、提交（svn ci）"></a>6、提交（svn ci）</h2><p>命令：<code>svn ci -m &quot;msg&quot;</code></p><ul><li>-m： 删除备注说明</li></ul><h2 id="7、查看日志（svn-log-path）"><a href="#7、查看日志（svn-log-path）" class="headerlink" title="7、查看日志（svn log path）"></a>7、查看日志（svn log path）</h2><p>命令：<code>svn log path</code></p><ul><li>path：要查看日志的文件和目录</li></ul><h2 id="8、比较差异（svn-di）"><a href="#8、比较差异（svn-di）" class="headerlink" title="8、比较差异（svn di）"></a>8、比较差异（svn di）</h2><p>命令：<code>svn diff path</code></p><ul><li>path：要比较的文件</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、检出-（svn-co）&quot;&gt;&lt;a href=&quot;#1、检出-（svn-co）&quot; class=&quot;headerlink&quot; title=&quot;1、检出 （svn co）&quot;&gt;&lt;/a&gt;1、检出 （svn co）&lt;/h2&gt;&lt;p&gt;命令：&lt;code&gt;svn co url path&lt;/
      
    
    </summary>
    
    
      <category term="软件使用" scheme="https://zengwu.com.cn/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="软件使用" scheme="https://zengwu.com.cn/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Window" scheme="https://zengwu.com.cn/tags/Window/"/>
    
  </entry>
  
  <entry>
    <title>centos 7 上测试网速</title>
    <link href="https://zengwu.com.cn/p/139c8a02.html"/>
    <id>https://zengwu.com.cn/p/139c8a02.html</id>
    <published>2022-03-27T14:32:47.000Z</published>
    <updated>2022-04-12T12:28:37.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title="##"></a>##</h2><p>小伙伴给了台CentOS7服务器过来，yum安装东西下载有点慢，想测试一下网速 ，可以使用测试网速的一个小工具speedtest。<br>　　Speedtest.net强大而知名的全球宽带网络速度测试网站，采用Flash载入界面，Alexa世界排名非常高，Speedtest.net在全球有数百个测试节点，国内有测速节点几十个。作为一款在线并且可视化的网速测试工具。使用方法简单，无需下载、安装Speedtest.net还推出了命令行下测速工具speedtest.py 就能够实时测试网速。</p><h2 id="一、下载安装包"><a href="#一、下载安装包" class="headerlink" title="一、下载安装包"></a>一、下载安装包</h2><pre><code class="line-numbers language-bash">wget https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py</code></pre><h2 id="二、赋予可执行权限"><a href="#二、赋予可执行权限" class="headerlink" title="二、赋予可执行权限"></a>二、赋予可执行权限</h2><pre><code class="line-numbers language-bash">chmod +x speedtest.py</code></pre><h2 id="二、运行"><a href="#二、运行" class="headerlink" title="二、运行"></a>二、运行</h2><p>因为CentOS7默认自带了python2.7，所以可以直接运行</p><pre><code class="line-numbers language-bash">./speedtest.py</code></pre><p>等待执行结束，就可以看到测试结果了。</p><p>除了测速，speedtest 还有其他的一些功能</p><pre><code class="line-numbers language-bash">./speedtest --help</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;##&quot;&gt;&lt;/a&gt;##&lt;/h2&gt;&lt;p&gt;小伙伴给了台CentOS7服务器过来，yum安装东西下载有点慢，想测试一下网速 ，可以使用测试网速的一个小工具speedtest。&lt;br&gt;　　Speedt
      
    
    </summary>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Android下XMLHttpRequest出错</title>
    <link href="https://zengwu.com.cn/p/ac3ac4f8.html"/>
    <id>https://zengwu.com.cn/p/ac3ac4f8.html</id>
    <published>2022-03-23T09:50:34.000Z</published>
    <updated>2022-04-12T12:28:37.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在Android包下，使用了第三方SDK登录，在切出去登录成功后，在SDK的回调中使用runOnGLThread线程回调到TS代码中。</p><pre><code class="line-numbers language-java">appActivity.runOnGLThread(new Runnable() {                        @Override                        public void run() {                            Cocos2dxJavascriptJavaBridge.evalString(&quot;SystemBridge.OnLoginSuccess(\&quot;&quot;+ accessToken + &quot;\&quot;,\&quot;&quot; + userId+&quot;\&quot;)&quot;);                        }                    });</code></pre><p>然后，在TS代码中，使用了XMLHttpRequest的post协议异步请求消息向服务器登录。</p><pre><code class="line-numbers language-ts">public static OnLoginSuccess(token: string, id: string) {        let postData = {            &quot;token&quot;:token,            &quot;id&quot;:id        }        var xhr = new XMLHttpRequest();        xhr.responseType = &#39;arraybuffer&#39;;        xhr.onreadystatechange = () =&gt; {            if (xhr.readyState === 4) {                if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) {                    // TODO 处理登录成功                }            }        };        xhr.open(&quot;POST&quot;, &quot;登录服务器Url&quot;, true);        xhr.timeout = 10000;        xhr.ontimeout = () =&gt; {                    // TODO 处理登录超时        }        xhr.send(postData);        xhr.onerror = () =&gt; {                    // TODO 处理登录错误        }}</code></pre><p>最后返回的结果是 刚发送数据同一帧就收到了ontimeout的回调，然后部分手机还会出现崩溃情况。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>XMLHttpRequest 的异步逻辑类似于setTimeout，setTimeout 和 XMLHttpRequest.onreadystatechange 用的都是同一个 Event Queue，唯一区别是 setTimeout 是定时器线程往队列里压，XMLHttpRequest.onreadystatechange 是 HTTP 异步请求线程往队列里压，其逻辑就要看CocosCreator的Main Loop了。可能原因是应用从别的程序中切换过来时，导致Main Loop回调出了点问题。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>就是在整个post时，用schedule做一个延迟回调。等到Event Queue队列循环正常后再调用post函数就可以了。</p><pre><code class="line-numbers language-ts">    public static OnLoginSuccess(token: string, id: string) {        Timer.scheduleOnce(() =&gt; {            let postData = {            &quot;token&quot;:token,            &quot;id&quot;:id        }        ...        其他代码         }, 0.1)    }</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在Android包下，使用了第三方SDK登录，在切出去登录成功后，在SDK的回调中使用runOnGLThread线程回调到T
      
    
    </summary>
    
    
      <category term="JS" scheme="https://zengwu.com.cn/categories/JS/"/>
    
    
      <category term="JS" scheme="https://zengwu.com.cn/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>apk/abb密钥生成</title>
    <link href="https://zengwu.com.cn/p/dbb8ef42.html"/>
    <id>https://zengwu.com.cn/p/dbb8ef42.html</id>
    <published>2022-03-17T05:38:47.000Z</published>
    <updated>2022-04-12T12:28:37.285Z</updated>
    
    <content type="html"><![CDATA[<p>提交google包时提示密钥强度太低。<br><img src="//gitee.com/guoke3915/zw/raw/master/p/dbb8ef42/19826068-8f78414dd9e587d7.png" alt></p><p>密钥是用cocos creater生成的，后面查了一下密钥长度是1024位的，google自动 生成的密钥是4096的，最少也要2048才不会有这种提示。可以用jdk自带的keytool工具来生成指定长度的密钥</p><h3 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h3><pre><code class="line-numbers language-bat">keytool -genkeypair -keystore e:/gk.keystore  -storepass gk123456 -alias key0 -keypass gk123456 -keyalg RSA -keysize 4096 -validity 36500 -dname CN=g,OU=cc55,O=cc55,L=sh,ST=sh,C=cn</code></pre><ul><li>-genkeypair：生成密钥</li><li>-keystore：秘钥库文件名及存位位置</li><li>-storepass：指定密钥库的密码</li><li>-alias：指定别名</li><li>-keypass：指定别名条目的密码</li><li>-keyalg：指定密钥的算法 (如 RSA DSA（如果不指定默认采用DSA）)</li><li>-keysize：密钥长度</li><li>-validity：证书有效期(单位：天)</li><li>-dname：CN=(名字与姓氏), OU=(组织单位名称), O=(组织名称), L=(城市或区域名称),ST=(州或省份名称), C=(单位的两字母国家代码)</li></ul><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><pre><code class="line-numbers language-bat">keytool -list -keystore e:/gk.keystore -storepass gk123456 </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;提交google包时提示密钥强度太低。&lt;br&gt;&lt;img src=&quot;//gitee.com/guoke3915/zw/raw/master/p/dbb8ef42/19826068-8f78414dd9e587d7.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;密钥是用cocos crea
      
    
    </summary>
    
    
      <category term="Java" scheme="https://zengwu.com.cn/categories/Java/"/>
    
    
      <category term="Java" scheme="https://zengwu.com.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Linux 查看修改用户（组）/ 密码</title>
    <link href="https://zengwu.com.cn/p/9820cd5d.html"/>
    <id>https://zengwu.com.cn/p/9820cd5d.html</id>
    <published>2022-03-09T10:18:55.000Z</published>
    <updated>2022-03-07T08:40:43.656Z</updated>
    
    <content type="html"><![CDATA[<ul><li>查看用户列表 cat /etc/passwd 或者 cat /etc/shadow</li><li>增加/修改/删除用户 useradd/usermod/userdel</li><li>查看用户组 cat /etc/group</li><li>增加/修改/删除用户组 groupadd/groupmod/groupdel</li><li>修改密码 passwd <accountName></accountName></li><li>查看一个文件的group ID： stat -c ‘%g’ /var/run/docker.sock</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;查看用户列表 cat /etc/passwd 或者 cat /etc/shadow&lt;/li&gt;
&lt;li&gt;增加/修改/删除用户 useradd/usermod/userdel&lt;/li&gt;
&lt;li&gt;查看用户组 cat /etc/group&lt;/li&gt;
&lt;li&gt;增加/修改/
      
    
    </summary>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>使用Intellij Idea打包java为可执行jar包</title>
    <link href="https://zengwu.com.cn/p/2911b980.html"/>
    <id>https://zengwu.com.cn/p/2911b980.html</id>
    <published>2022-03-08T03:01:55.000Z</published>
    <updated>2022-03-07T08:40:43.659Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-选中Java项目工程名称，在菜单中选择-File-gt-project-structure…-快捷键Ctrl-Alt-Shift-S-。"><a href="#1-选中Java项目工程名称，在菜单中选择-File-gt-project-structure…-快捷键Ctrl-Alt-Shift-S-。" class="headerlink" title="1. 选中Java项目工程名称，在菜单中选择 File-&gt;project structure… (快捷键Ctrl+Alt+Shift+S)。"></a>1. 选中Java项目工程名称，在菜单中选择 File-&gt;project structure… (快捷键Ctrl+Alt+Shift+S)。</h3><p><img src="//gitee.com/guoke3915/zw/raw/master/p/2911b980/19826068-29a630e562db20a6.png" alt></p><h3 id="2-在弹出的窗口中左侧选中”Artifacts”，点击”-”选择jar，然后选择”from-modules-with-dependencies”。"><a href="#2-在弹出的窗口中左侧选中”Artifacts”，点击”-”选择jar，然后选择”from-modules-with-dependencies”。" class="headerlink" title="2. 在弹出的窗口中左侧选中”Artifacts”，点击”+”选择jar，然后选择”from modules with dependencies”。"></a>2. 在弹出的窗口中左侧选中”Artifacts”，点击”+”选择jar，然后选择”from modules with dependencies”。</h3><p><img src="//gitee.com/guoke3915/zw/raw/master/p/2911b980/19826068-d79f9c23c46276f9.png" alt></p><h3 id="3-在配置窗口中配置”Main-Class”。"><a href="#3-在配置窗口中配置”Main-Class”。" class="headerlink" title="3. 在配置窗口中配置”Main Class”。"></a>3. 在配置窗口中配置”Main Class”。</h3><p><img src="//gitee.com/guoke3915/zw/raw/master/p/2911b980/19826068-b31d3f00392f49e7.png" alt></p><h3 id="4-配置Directory-for-META-INF-MAINFEST-MF，此项配置的缺省值是：羡慕java所在文件目录，需要改成：与src目录同级的目录。如果不这样修改，打成的jar包里没有包含META-INF-MAINFEST-MF文件"><a href="#4-配置Directory-for-META-INF-MAINFEST-MF，此项配置的缺省值是：羡慕java所在文件目录，需要改成：与src目录同级的目录。如果不这样修改，打成的jar包里没有包含META-INF-MAINFEST-MF文件" class="headerlink" title="4.配置Directory for META-INF/MAINFEST.MF，此项配置的缺省值是：羡慕java所在文件目录，需要改成：与src目录同级的目录。如果不这样修改，打成的jar包里没有包含META-INF/MAINFEST.MF文件"></a>4.配置<code>Directory for META-INF/MAINFEST.MF</code>，此项配置的缺省值是：羡慕java所在文件目录，需要改成：与src目录同级的目录。如果不这样修改，打成的jar包里没有包含META-INF/MAINFEST.MF文件</h3><p><img src="//gitee.com/guoke3915/zw/raw/master/p/2911b980/19826068-e5c7d0313b89996d.png" alt></p><h3 id="5-完成后，点击OK，Apply等按钮，回到IDEA的主菜单，选择Build-Build-Artifacts下的Build或者Rebuild即可生成最终的可运行的jar，在项目目录-out-artifacts-项目名称目录下面找到生成的目标jar，可以看到META-INF-MAINFEST-MF文件被正确包含，内容也正确。"><a href="#5-完成后，点击OK，Apply等按钮，回到IDEA的主菜单，选择Build-Build-Artifacts下的Build或者Rebuild即可生成最终的可运行的jar，在项目目录-out-artifacts-项目名称目录下面找到生成的目标jar，可以看到META-INF-MAINFEST-MF文件被正确包含，内容也正确。" class="headerlink" title="5. 完成后，点击OK，Apply等按钮，回到IDEA的主菜单，选择Build - Build Artifacts下的Build或者Rebuild即可生成最终的可运行的jar，在项目目录\out\artifacts\项目名称目录下面找到生成的目标jar，可以看到META-INF/MAINFEST.MF文件被正确包含，内容也正确。"></a>5. 完成后，点击OK，Apply等按钮，回到IDEA的主菜单，选择<code>Build - Build Artifacts</code>下的<code>Build</code>或者<code>Rebuild</code>即可生成最终的可运行的jar，在<code>项目目录\out\artifacts\项目名称目录</code>下面找到生成的目标jar，可以看到META-INF/MAINFEST.MF文件被正确包含，内容也正确。</h3><p><img src="//gitee.com/guoke3915/zw/raw/master/p/2911b980/19826068-76fec235df338d15.png" alt></p><p>本文参考：<a href="https://blog.csdn.net/xuemengrui12/article/details/74984731" target="_blank" rel="noopener">https://blog.csdn.net/xuemengrui12/article/details/74984731</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-选中Java项目工程名称，在菜单中选择-File-gt-project-structure…-快捷键Ctrl-Alt-Shift-S-。&quot;&gt;&lt;a href=&quot;#1-选中Java项目工程名称，在菜单中选择-File-gt-project-structure…-快
      
    
    </summary>
    
    
      <category term="Java" scheme="https://zengwu.com.cn/categories/Java/"/>
    
    
      <category term="Java" scheme="https://zengwu.com.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Windows后台运行jar包</title>
    <link href="https://zengwu.com.cn/p/d2832d8e.html"/>
    <id>https://zengwu.com.cn/p/d2832d8e.html</id>
    <published>2022-03-07T07:17:55.000Z</published>
    <updated>2022-03-07T08:40:43.657Z</updated>
    
    <content type="html"><![CDATA[<p>可以使用<code>javaw</code>来后台运行jar包，可以与个脚本执行</p><pre><code class="line-numbers language-bat">@echo off:: 进入到jar所在盘D::: 进入jar目录cd &quot;D:\Program Files\xxx&quot;:: 启动start javaw -jar xxx.jarexit</code></pre><p>可以查看javaw.exe进程来判断jar运行状态</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可以使用&lt;code&gt;javaw&lt;/code&gt;来后台运行jar包，可以与个脚本执行&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;line-numbers language-bat&quot;&gt;@echo off
:: 进入到jar所在盘
D:

:: 进入jar目录
cd &amp;quot;
      
    
    </summary>
    
    
      <category term="Windows" scheme="https://zengwu.com.cn/categories/Windows/"/>
    
    
      <category term="Window" scheme="https://zengwu.com.cn/tags/Window/"/>
    
  </entry>
  
  <entry>
    <title>Nginx强制跳转Https</title>
    <link href="https://zengwu.com.cn/p/ab9adaa4.html"/>
    <id>https://zengwu.com.cn/p/ab9adaa4.html</id>
    <published>2022-03-06T14:46:36.000Z</published>
    <updated>2022-03-07T08:40:43.660Z</updated>
    
    <content type="html"><![CDATA[<p>如果http默认80端口，https默认443端口，可以使用传统的<code>rewrite</code>和301状态来完成转发，但是如果https不是443端口呢，那就采用nginx的497状态码</p><pre><code class="line-numbers language-conf">server {    listen 5443 ssl http2;    server_name zngw.icu;    #ssl on;    ssl_certificate /etc/nginx/conf.d/key/zngw.icu.crt;    ssl_certificate_key /etc/nginx/conf.d/key/zngw.icu.key;    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;     #指定SSL服务器端支持的协议版本    ssl_ciphers  HIGH:!aNULL:!MD5;    ssl_prefer_server_ciphers   on;    #在使用SSLv3和TLS协议时指定服务器的加密算法要优先于客户端的加密算法    error_page 497 301 =307 https://$host:$server_port$request_uri;    location / {        root /var/www/html;        index index.html;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果http默认80端口，https默认443端口，可以使用传统的&lt;code&gt;rewrite&lt;/code&gt;和301状态来完成转发，但是如果https不是443端口呢，那就采用nginx的497状态码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;line-numbers la
      
    
    </summary>
    
    
      <category term="软件使用" scheme="https://zengwu.com.cn/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="软件使用" scheme="https://zengwu.com.cn/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>PM2启动和管理 jar</title>
    <link href="https://zengwu.com.cn/p/e24baf19.html"/>
    <id>https://zengwu.com.cn/p/e24baf19.html</id>
    <published>2022-03-05T11:45:21.000Z</published>
    <updated>2022-03-07T08:40:43.658Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-编写启动json脚本-start-json"><a href="#1-编写启动json脚本-start-json" class="headerlink" title="1. 编写启动json脚本 start.json"></a>1. 编写启动json脚本 start.json</h3><pre><code class="line-numbers language-json">{  &quot;apps&quot; : {        &quot;name&quot;:&quot;zngw&quot;,        &quot;script&quot;:&quot;java&quot;,        &quot;args&quot;:[                &quot;-XX:+UseG1GC&quot;,                &quot;-jar&quot;,                &quot;zngw.jar&quot;,         ],        &quot;error_file&quot;:&quot;./log/err.log&quot;,        &quot;out_file&quot;:&quot;./log/out.log&quot;,        &quot;merge_logs&quot;:true,        &quot;log_date_format&quot;:&quot;YYYY/MM/DD HH:mm:ss&quot;,                &quot;min_uptime&quot;: &quot;60s&quot;,         &quot;max_restarts&quot;: 30,        &quot;autorestart&quot;: true,                &quot;restart_delay&quot;: &quot;60&quot;         }}</code></pre><h3 id="2-启动"><a href="#2-启动" class="headerlink" title="2. 启动"></a>2. 启动</h3><pre><code class="line-numbers language-bash">pm2 start start.json</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-编写启动json脚本-start-json&quot;&gt;&lt;a href=&quot;#1-编写启动json脚本-start-json&quot; class=&quot;headerlink&quot; title=&quot;1. 编写启动json脚本 start.json&quot;&gt;&lt;/a&gt;1. 编写启动json脚本 st
      
    
    </summary>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>linux下使用ipv6连接</title>
    <link href="https://zengwu.com.cn/p/5e936033.html"/>
    <id>https://zengwu.com.cn/p/5e936033.html</id>
    <published>2022-02-20T06:44:03.000Z</published>
    <updated>2022-04-12T12:34:53.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSH远程登录服务器"><a href="#SSH远程登录服务器" class="headerlink" title="SSH远程登录服务器"></a>SSH远程登录服务器</h1><p>ssh连接ipv6地址格式为<code>ssh username@[IPv6_Host]:port</code>,如：</p><pre><code class="line-numbers language-bash">ssh root@[fe80::6fea:6e54:3cce:a359]:22</code></pre><p>如果是默认端口也可以直接使用<code>ssh root@fe80::6fea:6e54:3cce:a359</code>来连接</p><h1 id="filezilla连接ipv6"><a href="#filezilla连接ipv6" class="headerlink" title="filezilla连接ipv6"></a>filezilla连接ipv6</h1><p>使用filezilla连接ipv6地址服务器做文件传输时，如果直接使用ipv6地址会出现<code>给定的端口无效，端口号必须是一个1到65535间的值</code>错误。这时候只需要用<code>[]</code>装ipv6地址括起来就可以了</p><p><img src="//gitee.com/guoke3915/zw/raw/master/p/5e936033/19826068-2d3e3c2a80f0df97.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SSH远程登录服务器&quot;&gt;&lt;a href=&quot;#SSH远程登录服务器&quot; class=&quot;headerlink&quot; title=&quot;SSH远程登录服务器&quot;&gt;&lt;/a&gt;SSH远程登录服务器&lt;/h1&gt;&lt;p&gt;ssh连接ipv6地址格式为&lt;code&gt;ssh username@[IPv6
      
    
    </summary>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Java遍历对象的属性和值</title>
    <link href="https://zengwu.com.cn/p/e95d9ea.html"/>
    <id>https://zengwu.com.cn/p/e95d9ea.html</id>
    <published>2022-02-10T02:29:52.000Z</published>
    <updated>2022-02-11T03:03:32.296Z</updated>
    
    <content type="html"><![CDATA[<p>在Java类中，我们可以使用反射中的getDeclaredFields()或者getFields()方法来获取属性和值。</p><ul><li>getFields()：获取某个类的所有的public字段，其中是包括父类的public字段的。</li><li>getDeclaredFields()：获取某个类的自身的所有字段，不包括父类的字段。</li></ul><p>比如测试类：</p><pre><code class="line-numbers language-java">public class Test {    public int id;    public String name;}</code></pre><p>获取类的属性和值</p><pre><code class="line-numbers language-java">public class Application {    public static void main(String[] args) throws Exception {        Test test = new Test();        test.id = 1;        test.name = &quot;guoke&quot;;        // 遍历输出属性        Field[] fields =  test.getClass().getDeclaredFields();        for( int i = 0; i &lt; fields.length; i++){            Field f = fields[i];            System.out.println(&quot;属性名：&quot;+f.getName()+&quot;,属性值：&quot;+f.get(test));        }    }}</code></pre><p>设置类的属性值，比如做一个类成员属性深拷贝</p><pre><code class="line-numbers language-java">public class Test {    public int id;    public String name;    public void copy(Test obj){        try {            Field[] fields =  obj.getClass().getDeclaredFields();            for( int i = 0; i &lt; fields.length; i++){                Field f = fields[i];                f.set(this, f.get(obj));            }        } catch (Exception e) {            Log.error(e);        }    }}</code></pre><p>测试：</p><pre><code class="line-numbers language-java">public class Application {    public static void main(String[] args) throws Exception {        Test test = new Test();        test.id = 1;        test.name = &quot;guoke&quot;;        Test test1 = new Test();        test1.copy(test);    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Java类中，我们可以使用反射中的getDeclaredFields()或者getFields()方法来获取属性和值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getFields()：获取某个类的所有的public字段，其中是包括父类的public字段的。&lt;/li&gt;
&lt;li&gt;getDe
      
    
    </summary>
    
    
      <category term="Java" scheme="https://zengwu.com.cn/categories/Java/"/>
    
    
      <category term="Java" scheme="https://zengwu.com.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Nginx上传时报413错误</title>
    <link href="https://zengwu.com.cn/p/2acf1e35.html"/>
    <id>https://zengwu.com.cn/p/2acf1e35.html</id>
    <published>2022-02-09T01:22:41.000Z</published>
    <updated>2022-02-11T03:03:32.297Z</updated>
    
    <content type="html"><![CDATA[<p>使用nginx转发的OwnCloud网盘，在上传大文件的时候出现了<code>ochttpstatuserrordomain 413</code>错误。在网上查询了一下资料，发现nginx默认上传大小是1MB，大于1MB的文件就会报413错误。</p><p>找到nginx的配置文件，在<code>server</code>中或在<code>server 的 location</code>配置中，添加<code>client_max_body_size  1g;</code>,后面的数字是需要的大小，这里为1g。</p><pre><code class="line-numbers language-conf">    server {        listen 80;        server_name adb.abc.com;        location / {            root   html;            index  index.html index.htm;            client_max_body_size  1g; # 改为需要的大小!        }    }</code></pre><p>然后重启nginx或重新加载nginx配置</p><pre><code class="line-numbers language-bash">nginx/sbin/nginx -s reload</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用nginx转发的OwnCloud网盘，在上传大文件的时候出现了&lt;code&gt;ochttpstatuserrordomain 413&lt;/code&gt;错误。在网上查询了一下资料，发现nginx默认上传大小是1MB，大于1MB的文件就会报413错误。&lt;/p&gt;
&lt;p&gt;找到nginx
      
    
    </summary>
    
    
      <category term="软件使用" scheme="https://zengwu.com.cn/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="软件使用" scheme="https://zengwu.com.cn/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>netsh命令实现端口转发</title>
    <link href="https://zengwu.com.cn/p/397c12f5.html"/>
    <id>https://zengwu.com.cn/p/397c12f5.html</id>
    <published>2022-02-05T07:02:55.000Z</published>
    <updated>2022-02-11T03:14:45.654Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>win10在samba分享时只能使用默认的端口139和445，但如果用了非139或445的端口将无法访问，但是可以使用netsh命令来映射将分享端口映射成139和445。不过先要禁用本地的LanmanServer 服务，不然映射端口时会报端口被占用错误。</p><pre><code class="line-numbers language-bat">sc config LanmanServer start= disablednet stop LanmanServer</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>netsh命令可以实现端口转发，即时生效，随意修改删除，不影响其他ip映射 </p><h2 id="添加端口转发"><a href="#添加端口转发" class="headerlink" title="添加端口转发"></a>添加端口转发</h2><pre><code class="line-numbers language-bat">netsh interface portproxy add v4tov4 listenport=5139 connectaddress=192.168.31.55 connectport=139netsh interface portproxy add v4tov4 listenport=5445 connectaddress=192.168.31.55 connectport=445</code></pre><p>将192.168.31.55服务器中非默认端口共享端口5139、5445映射成本地的139和445端口</p><h2 id="查看所有端口转发"><a href="#查看所有端口转发" class="headerlink" title="查看所有端口转发"></a>查看所有端口转发</h2><pre><code class="line-numbers language-bat">netsh interface portproxy show all</code></pre><h2 id="删除端口"><a href="#删除端口" class="headerlink" title="删除端口"></a>删除端口</h2><pre><code class="line-numbers language-bat">netsh interface portproxy delete v4tov4 listenaddress=192.168.31.55 listenport=5139  netsh interface portproxy delete v4tov4 listenaddress=192.168.31.55 listenport=5  </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;win10在samba分享时只能使用默认的端口139和445，但如果用了非139或445的端口将无法访问，但是可以使用netsh命令来映射将
      
    
    </summary>
    
    
      <category term="Windows" scheme="https://zengwu.com.cn/categories/Windows/"/>
    
    
      <category term="软件使用" scheme="https://zengwu.com.cn/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Window" scheme="https://zengwu.com.cn/tags/Window/"/>
    
  </entry>
  
  <entry>
    <title>软raid中使用</title>
    <link href="https://zengwu.com.cn/p/3d8979b.html"/>
    <id>https://zengwu.com.cn/p/3d8979b.html</id>
    <published>2022-02-05T01:41:15.000Z</published>
    <updated>2022-03-13T02:44:31.927Z</updated>
    
    <content type="html"><![CDATA[<p>软raid中是通过软件层面来模拟实现raid的相关功能，从而达到与硬件raid相同的功能。在Linux中通常是使用md模块来实现软件raid。</p><h1 id="一、安装mdadm"><a href="#一、安装mdadm" class="headerlink" title="一、安装mdadm"></a>一、安装mdadm</h1><pre><code class="line-numbers language-bash">yum -y install mdadm</code></pre><h1 id="二、显示硬盘和分区信息"><a href="#二、显示硬盘和分区信息" class="headerlink" title="二、显示硬盘和分区信息"></a>二、显示硬盘和分区信息</h1><p>在VM虚拟机中完成测试，sda为系统盘，sdb、sdc、sdd、sde为四个制作raid的硬盘。</p><pre><code class="line-numbers language-bash">lsblk NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTsda               8:0    0   20G  0 disk ├─sda1            8:1    0    1G  0 part /boot└─sda2            8:2    0   19G  0 part   ├─centos-root 253:0    0   17G  0 lvm  /  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]sdb               8:16   0   20G  0 disk sdc               8:32   0   20G  0 disk sdd               8:48   0   20G  0 disk sde               8:64   0   20G  0 disk </code></pre><h1 id="三、格式化硬盘"><a href="#三、格式化硬盘" class="headerlink" title="三、格式化硬盘"></a>三、格式化硬盘</h1><h2 id="2TB以内硬盘"><a href="#2TB以内硬盘" class="headerlink" title="2TB以内硬盘"></a>2TB以内硬盘</h2><pre><code class="line-numbers language-bash">fdisk /dev/sdbn 回车 回车 回车（或输入分区大小，建议预留100M空间） t l fd w</code></pre><ul><li>n：创建分区，回车选择默认分区和大小使用全部硬盘</li><li>t：修改分区类型，回车选择默认分区</li><li>l：列出所有分区类型</li><li>fd：指raid分区，不同版本前的数字不一样，从l显示的列表中找到Linux raid auto类型就行了。</li></ul><p>完整操作实例</p><pre><code class="line-numbers language-bash">[root@localhost ~]# fdisk /dev/sdb欢迎使用 fdisk (util-linux 2.23.2)。更改将停留在内存中，直到您决定将更改写入磁盘。使用写入命令前请三思。Device does not contain a recognized partition table使用磁盘标识符 0xef090fa6 创建新的 DOS 磁盘标签。命令(输入 m 获取帮助)：nPartition type:   p   primary (0 primary, 0 extended, 4 free)   e   extendedSelect (default p): Using default response p分区号 (1-4，默认 1)：起始 扇区 (2048-41943039，默认为 2048)：将使用默认值 2048Last 扇区, +扇区 or +size{K,M,G} (2048-41943039，默认为 41943039)：将使用默认值 41943039分区 1 已设置为 Linux 类型，大小设为 20 GiB命令(输入 m 获取帮助)：l 0  空              24  NEC DOS         81  Minix / 旧 Linu bf  Solaris         1  FAT12           27  隐藏的 NTFS Win 82  Linux 交换 / So c1  DRDOS/sec (FAT- 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT- 3  XENIX usr       3c  PartitionMagic  84  OS/2 隐藏的 C:  c6  DRDOS/sec (FAT- 4  FAT16 &lt;32M      40  Venix 80286     85  Linux 扩展      c7  Syrinx          5  扩展            41  PPC PReP Boot   86  NTFS 卷集       da  非文件系统数据  6  FAT16           42  SFS             87  NTFS 卷集       db  CP/M / CTOS / . 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux 纯文本    de  Dell 工具       8  AIX             4e  QNX4.x 第2部分  8e  Linux LVM       df  BootIt          9  AIX 可启动      4f  QNX4.x 第3部分  93  Amoeba          e1  DOS 访问        a  OS/2 启动管理器 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O         b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor       c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad 休 eb  BeOS fs         e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT             f  W95 扩展 (LBA)  54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC  11  隐藏的 FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor      12  Compaq 诊断     5c  Priam Edisk     a9  NetBSD          f4  SpeedStor      14  隐藏的 FAT16 &lt;3 61  SpeedStor       ab  Darwin 启动     f2  DOS 次要       16  隐藏的 FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS    17  隐藏的 HPFS/NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE 18  AST 智能睡眠    65  Novell Netware  b8  BSDI swap       fd  Linux raid 自动1b  隐藏的 W95 FAT3 70  DiskSecure 多启 bb  Boot Wizard 隐  fe  LANstep        1c  隐藏的 W95 FAT3 75  PC/IX           be  Solaris 启动    ff  BBT            1e  隐藏的 W95 FAT1 80  旧 Minix       命令(输入 m 获取帮助)：t已选择分区 1Hex 代码(输入 L 列出所有代码)：fd已将分区“Linux”的类型更改为“Linux raid autodetect”命令(输入 m 获取帮助)：p磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区Units = 扇区 of 1 * 512 = 512 bytes扇区大小(逻辑/物理)：512 字节 / 512 字节I/O 大小(最小/最佳)：512 字节 / 512 字节磁盘标签类型：dos磁盘标识符：0xef090fa6   设备 Boot      Start         End      Blocks   Id  System/dev/sdb1            2048    41943039    20970496   fd  Linux raid autodetect命令(输入 m 获取帮助)：wThe partition table has been altered!Calling ioctl() to re-read partition table.正在同步磁盘。</code></pre><h2 id="2TB以上"><a href="#2TB以上" class="headerlink" title="2TB以上"></a>2TB以上</h2><pre><code class="line-numbers language-bash">parted /dev/sdbmklabel gpt mkpart 回车 ext4 0GB 4000GB p q</code></pre><ul><li>mklabel:创建一个新的磁盘标签</li><li>gpt: gpt分区</li><li>mkpart: 创建分区</li><li>ext4: 硬盘数据格式</li><li>0GB: 开始位置</li><li>4000GB: 结束位置</li><li>p: 显示信息</li><li>q: 保存退出</li></ul><pre><code class="line-numbers language-bash">[root@zngw ~]# parted /dev/sdbGNU Parted 3.1Using /dev/sdbWelcome to GNU Parted! Type &#39;help&#39; to view a list of commands.(parted) mklabel                                                          New disk label type? gpt                                                  Warning: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost. Do you want to continue?Yes/No? y                                                                 (parted) mkpart                                                           Partition name?  []?                                                      File system type?  [ext2]? ext4                                           Start? 0GB                                                                End? 4000GB                                                               (parted) p                                                                Model: External USB3.0 DISK04 (scsi)Disk /dev/sdb: 4001GBSector size (logical/physical): 512B/4096BPartition Table: gptDisk Flags: Number  Start   End     Size    File system  Name  Flags 1      1049kB  4000GB  4000GB(parted) q                                                                Information: You may need to update /etc/fstab.</code></pre><h1 id="四、创建raid"><a href="#四、创建raid" class="headerlink" title="四、创建raid"></a>四、创建raid</h1><pre><code class="line-numbers language-bash">mdadm --create /dev/md5 --auto yes --level 5 -n4 /dev/sd{b,c,d,e}</code></pre><ul><li>-C/–create:新建阵列</li><li>-a/–auto:允许mdadm创建设备文件，一般常用参数-a yes一次性创建</li><li>-l/–levle:RAID模式，支持RAID0/1/4/5/6/10等</li><li>-n/–raid-devices=:创建阵列中活动磁盘的数量</li><li>/dev/md0:阵列的设备名称</li><li>/dev/sd{b,c,d,e}1：创建阵列中的物理磁盘分区信息</li></ul><h1 id="五、查看阵列状态"><a href="#五、查看阵列状态" class="headerlink" title="五、查看阵列状态"></a>五、查看阵列状态</h1><pre><code class="line-numbers language-bash">cat /proc/mdstat Personalities : [raid1] [raid10] [raid6] [raid5] [raid4] md5 : active raid5 sde[4] sdd[2] sdc[1] sdb[0]      62862336 blocks super 1.2 level 5, 512k chunk, algorithm 2 [4/3] [UUU_]      [=====&gt;...............]  recovery = 25.7% (5400192/20954112) finish=1.2min speed=200007K/secunused devices: &lt;none&gt;</code></pre><h1 id="六、创建md5配置文件"><a href="#六、创建md5配置文件" class="headerlink" title="六、创建md5配置文件"></a>六、创建md5配置文件</h1><pre><code class="line-numbers language-bash">[root@localhost ~]# echo DEVICE /dev/sd{b,c,d,e} &gt;&gt; /etc/mdadm.conf[root@localhost ~]# mdadm -Evs &gt;&gt; /etc/mdadm.conf [root@localhost ~]# cat /etc/mdadm.confDEVICE /dev/sdb1 /dev/sdc1 /dev/sdd1ARRAY /dev/md/0  level=raid1 metadata=1.2 num-devices=4 UUID=afe6977f:2d213295:513422e5:70099cb9 name=localhost.localdomain:0   devices=/dev/sdb1,/dev/sdc1,/dev/sdd1DEVICE /dev/sdb /dev/sdc /dev/sdd /dev/sdeARRAY /dev/md/5  level=raid5 metadata=1.2 num-devices=4 UUID=ba5caeb6:401904f5:674ddc67:c4f95242 name=localhost.localdomain:5   devices=/dev/sdb,/dev/sdc,/dev/sdd,/dev/sde</code></pre><h1 id="七、格式化RAID分区"><a href="#七、格式化RAID分区" class="headerlink" title="七、格式化RAID分区"></a>七、格式化RAID分区</h1><pre><code class="line-numbers language-bash">mkfs -t ext4 /dev/md5</code></pre><h1 id="八、挂载"><a href="#八、挂载" class="headerlink" title="八、挂载"></a>八、挂载</h1><pre><code class="line-numbers language-bash">mkdir /datamount /dev/md5 /data</code></pre><p>开机自动挂载</p><pre><code class="line-numbers language-bash">vim /etc/fstab/dev/md5 /data ext4 defaults 0 0</code></pre><h1 id="九、测试"><a href="#九、测试" class="headerlink" title="九、测试"></a>九、测试</h1><pre><code class="line-numbers language-bash"># 模拟/dev/sdc故障mdadm /dev/md5 -f /dev/sdc# 显示信息mdadm -D /dev/md5/dev/md5:           Version : 1.2     Creation Time : Mon Jan 24 19:04:38 2022        Raid Level : raid5        Array Size : 62862336 (59.95 GiB 64.37 GB)     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)      Raid Devices : 4     Total Devices : 4       Persistence : Superblock is persistent       Update Time : Mon Jan 24 19:17:38 2022             State : clean, degraded     Active Devices : 3   Working Devices : 3    Failed Devices : 1     Spare Devices : 0            Layout : left-symmetric        Chunk Size : 512KConsistency Policy : resync              Name : localhost.localdomain:5  (local to host localhost.localdomain)              UUID : ba5caeb6:401904f5:674ddc67:c4f95242            Events : 20    Number   Major   Minor   RaidDevice State       0       8       16        0      active sync   /dev/sdb       -       0        0        1      removed       2       8       48        2      active sync   /dev/sdd       4       8       64        3      active sync   /dev/sde       1       8       32        -      faulty   /dev/sdc</code></pre><p>更换硬盘，格式化硬盘，恢复数据</p><pre><code class="line-numbers language-bash"># 移除损坏硬盘mdadm /dev/md5 --remove /dev/sdc# 添加新硬盘mdadm /dev/md5 --add /dev/sdc# 查看状态等待恢复完成mdadm -D /dev/md5</code></pre><h1 id="十、添加新硬盘"><a href="#十、添加新硬盘" class="headerlink" title="十、添加新硬盘"></a>十、添加新硬盘</h1><p>添加一块硬盘<code>/dev/sdf</code>，格式化</p><pre><code class="line-numbers language-bash"># 添加硬盘mdadm /dev/md5 -a /dev/sdf# 扩容硬盘mdadm -G /dev/md5 -n5# 查看状态等待扩容完成mdadm -D /dev/md5# 将/dev/md5分区扩容resize2fs /dev/md5</code></pre><blockquote><p>注：数据无价，扩容时最好做好备份。</p></blockquote><h1 id="十一、重装系统后恢复"><a href="#十一、重装系统后恢复" class="headerlink" title="十一、重装系统后恢复"></a>十一、重装系统后恢复</h1><p>先安装mdadm软件，再使用下面命令自动检测并安装所有的 md 硬盘</p><pre><code class="line-numbers language-bash">mdadm --assemble --scan</code></pre><p>可以查看结果存在5块硬盘并恢复成功</p><pre><code class="line-numbers language-bash">mdadm: /dev/md/5 has been started with 5 drives.</code></pre><h1 id="十二、删除软RAID"><a href="#十二、删除软RAID" class="headerlink" title="十二、删除软RAID"></a>十二、删除软RAID</h1><pre><code class="line-numbers language-bash"># 卸载挂载点umount /dev/md5# 停止软件RAID设备mdadm -S /dev/md5# 删除RAID中的磁盘mdadm --misc --zero-superblock /dev/sd{b,c,d,e}# 删除mdadm配置文件rm -f /etc/mdadm.conf# 删除/etc/fstab中的挂载信息</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;软raid中是通过软件层面来模拟实现raid的相关功能，从而达到与硬件raid相同的功能。在Linux中通常是使用md模块来实现软件raid。&lt;/p&gt;
&lt;h1 id=&quot;一、安装mdadm&quot;&gt;&lt;a href=&quot;#一、安装mdadm&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 系统备份与恢复</title>
    <link href="https://zengwu.com.cn/p/91fa3804.html"/>
    <id>https://zengwu.com.cn/p/91fa3804.html</id>
    <published>2022-02-03T16:41:15.000Z</published>
    <updated>2022-01-29T03:59:41.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、备份"><a href="#一、备份" class="headerlink" title="一、备份"></a>一、备份</h1><h2 id="1-使用tar命令备份"><a href="#1-使用tar命令备份" class="headerlink" title="1. 使用tar命令备份"></a>1. 使用tar命令备份</h2><p>tar打包命令的特点：</p><ul><li>保留权限</li><li>适合备份整个目录</li><li>可以选择不同的压缩方式</li><li>如果选择不压缩还能实现增量备份，部份还原，参考man tar</li></ul><p>因为Linux类系统不像windows,它不会限制ROOT用户存取任何东西，因此完全可以把一个分区上全部文件都存放入一个TAR文件中。</p><h2 id="2-备份步骤"><a href="#2-备份步骤" class="headerlink" title="2. 备份步骤"></a>2. 备份步骤</h2><ol><li><p>使用root用户登录</p></li><li><p>进入根目录<code>cd /</code></p></li><li><p>使用<code>tar</code>命令备份</p></li></ol><pre><code class="line-numbers language-bash">tar cvpzf backup.tgz / --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=backup.tgz</code></pre><h2 id="3-说明"><a href="#3-说明" class="headerlink" title="3. 说明"></a>3. 说明</h2><p>下面详解下这个命令： </p><ul><li>tar 是用于打包文件的命令。 </li><li>cvpfz 是tar的选项，分别是<code>创建档案文件</code>、<code>保持权限</code>(保留所有东西原来的权限)、<code>使用gzip来减小文件尺寸</code>。 </li><li>backup.gz 是我们作为备份文件的文件名。 </li><li><code>/</code> 是我们要备份的目录，/代表的是整个文件系统。</li><li>–exclude 排除目录：<blockquote><ol><li>例如<code>/proc</code>、<code>/lost+ found</code>、<code>/sys</code>。</li><li>当然<code>backup.gz</code>这个备份文件本身必须排除在外，不然就无限循环了。</li><li>另外如果不把<code>/mnt</code>排 除在外，那么挂载在<code>/mnt</code>上的其它分区也会被备份。</li><li>另外需要确认一下<code>/media</code>上没有挂载任何东西(例如光盘、移动硬盘)，如果有挂载东西， 必须把<code>/media</code>也排除在外。 </li></ol></blockquote></li></ul><p>执行备份命令后，如果文件比较多可能需要很长时间，备份完成后，在文件系统的根目录将生成一个名为<code>backup.tgz</code>的文件，它的尺寸有可能非常大。</p><h1 id="二、恢复"><a href="#二、恢复" class="headerlink" title="二、恢复"></a>二、恢复</h1><p>恢复系统其实非常简单，就是把之前打包的文件覆盖回去就是了。如果系统损坏不能进入了，可以先安装一个最小化安装，配置相同的磁盘设备，然后再用<code>backup.tgz</code>恢复</p><p>首先登陆为root用户，然后把之前备份的文件<code>backup.tgz</code>拷贝到分区的根目录下。<br>Linux中可以在一个运行的系统中恢复系统，不需要用boot-cd来专门引导。当然如果系统已经无法启动， 那就只能先重装一下系统，再来恢复。</p><h2 id="1-tar恢复"><a href="#1-tar恢复" class="headerlink" title="1. tar恢复"></a>1. tar恢复</h2><p>使用下面的命令来恢复系统</p><pre><code class="line-numbers language-bash">tar xvpfz backup.tgz -C /</code></pre><h2 id="2-新建备份时排除的文件夹"><a href="#2-新建备份时排除的文件夹" class="headerlink" title="2. 新建备份时排除的文件夹"></a>2. 新建备份时排除的文件夹</h2><p>恢复命令结束时，你的工作还没完成，别忘了重新创建那些在备份时被排除在外的目录：</p><pre><code class="line-numbers language-bash">mkdir procmkdir lost+foundmkdir mntmkdir sys</code></pre><ul><li>/proc 权限：文件所有者：root群组：root 所有者：读取 执行 群组：读取 执行 其它：读取 执行</li><li>/lost+found 权限：文件所有者：root群组：root 所有者：读取 写入 执行 群组：读取 执行 其它：读取 执行</li><li>/mnt 权限：文件所有者：root群组：root 所有者：读取 写入 执行 群组：读取 执行 其它：读取 执行</li><li>/sys 权限：文件所有者：root群组：root 所有者：读取 写入 执行 群组：读取 执行 其它：读取 执行</li></ul><h2 id="3-恢复为原来的-SELinux-Type"><a href="#3-恢复为原来的-SELinux-Type" class="headerlink" title="3. 恢复为原来的 SELinux Type"></a>3. 恢复为原来的 SELinux Type</h2><pre><code class="line-numbers language-bash">restorecon -Rv /</code></pre><p>解释：restorecon：恢复为原来的 SELinux Type参数：</p><ul><li>-R：连同子目录一起修改</li><li>-v：将过程显示到屏幕上</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、备份&quot;&gt;&lt;a href=&quot;#一、备份&quot; class=&quot;headerlink&quot; title=&quot;一、备份&quot;&gt;&lt;/a&gt;一、备份&lt;/h1&gt;&lt;h2 id=&quot;1-使用tar命令备份&quot;&gt;&lt;a href=&quot;#1-使用tar命令备份&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/categories/CentOS/"/>
    
    
      <category term="CentOS" scheme="https://zengwu.com.cn/tags/CentOS/"/>
    
  </entry>
  
</feed>
